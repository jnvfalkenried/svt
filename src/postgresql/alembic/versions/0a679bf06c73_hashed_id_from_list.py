"""Hashed id from list

Revision ID: 0a679bf06c73
Revises: d9eaa08778c7
Create Date: 2024-12-26 19:08:25.321032

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "0a679bf06c73"
down_revision: Union[str, None] = "d9eaa08778c7"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("related_hashtags_pkey", "related_hashtags", type_="primary")
    op.add_column(
        "related_hashtags", sa.Column("hashed_id", sa.String(), nullable=False)
    )
    op.create_primary_key("pk_related_hashtags", "related_hashtags", ["hashed_id"])
    op.alter_column(
        "related_hashtags",
        "antecedent_id",
        type_=sa.ARRAY(sa.String),
        postgresql_using="antecedent_id::VARCHAR[]",
        nullable=False,
    )
    op.alter_column(
        "related_hashtags",
        "consequent_id",
        type_=sa.ARRAY(sa.String),
        postgresql_using="antecedent_id::VARCHAR[]",
        nullable=False,
    )
    op.alter_column(
        "related_hashtags",
        "antecedent_title",
        type_=sa.ARRAY(sa.String),
        postgresql_using="antecedent_id::VARCHAR[]",
        nullable=False,
    )
    op.alter_column(
        "related_hashtags",
        "consequent_title",
        type_=sa.ARRAY(sa.String),
        postgresql_using="antecedent_id::VARCHAR[]",
        nullable=False,
    )
    op.create_index(
        "idx_antecedent_id_gin",
        "related_hashtags",
        ["antecedent_id"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        "idx_consequent_id_gin",
        "related_hashtags",
        ["consequent_id"],
        unique=False,
        postgresql_using="gin",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "idx_consequent_id_gin", table_name="related_hashtags", postgresql_using="gin"
    )
    op.drop_index(
        "idx_antecedent_id_gin", table_name="related_hashtags", postgresql_using="gin"
    )
    op.alter_column(
        "related_hashtags",
        "antecedent_id",
        type_=sa.String,
        postgresql_using="antecedent_id::VARCHAR",
        nullable=False,
    )
    op.alter_column(
        "related_hashtags",
        "consequent_id",
        type_=sa.String,
        postgresql_using="antecedent_id::VARCHAR",
        nullable=False,
    )
    op.alter_column(
        "related_hashtags",
        "antecedent_title",
        type_=sa.String,
        postgresql_using="antecedent_id::VARCHAR",
        nullable=False,
    )
    op.alter_column(
        "related_hashtags",
        "consequent_title",
        type_=sa.String,
        postgresql_using="antecedent_id::VARCHAR",
        nullable=False,
    )
    op.drop_constraint("pk_related_hashtags", "related_hashtags", type_="primary")
    op.create_primary_key(
        "related_hashtags_pkey", "related_hashtags", ["antecedent_id", "consequent_id"]
    )
    op.drop_column("related_hashtags", "hashed_id")
    # ### end Alembic commands ###
